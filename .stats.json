{"lines": {"blank": 44, "comment": 8, "docstring": 157, "code": 128}, "pep8": {"count": 24, "categories": [["3", "E231", "missing whitespace after ','"], ["3", "E303", "too many blank lines (2)"], ["16", "E501", "line too long (88 > 79 characters)"], ["2", "W291", "trailing whitespace"]]}, "doc": {"statistics": {"tools/astro.py": {"tokens": {"AstroConversion.__init__": [36, ["Missing description", "Undocumented parameter `altitude`", "Undocumented parameter `latitude`", "Undocumented parameter `ra`", "Undocumented parameter `dec`", "Undocumented parameter `longitude`"]]}, "n_errors": 6, "n_tokens": 16}, "tools/coordinates/representation.py": {"tokens": {"GeodeticRepresentation": [32, ["Undocumented attribute `attr_classes`"]], "GeodeticRepresentation.from_cartesian": [40, ["Missing description", "Undocumented parameter `cart`"]], "GeodeticRepresentation.to_cartesian": [53, ["Missing description"]]}, "n_errors": 4, "n_tokens": 5}, "tools/coordinates/frame.py": {"tokens": {"ENU": [37, ["Undocumented attribute `equinox`", "Undocumented attribute `obstime`", "Undocumented attribute `default_representation`", "Missing description"]], "ENU.__init__": [50, ["Missing description", "Undocumented parameter `**kwargs`", "Undocumented parameter `*args`"]], "itrs_to_enu": [81, ["Undocumented parameter `enu`", "Undocumented parameter `itrs`"]], "enu_to_itrs": [94, ["Undocumented parameter `enu`", "Undocumented parameter `itrs`"]]}, "n_errors": 11, "n_tokens": 17}}, "doc": "Generic tools (topographic transformations, data encapsulation, astronomical conversion)", "classes": {}, "definitions": {}, "functions": {}, "imports": {"1": {"": [["astro", "astro"]]}}, "path": "tools/__init__.py", "modules": {"astro": {"doc": "Common framework for GRAND packages", "classes": {"AstroConversion": [27, "This class handles astronomical conversion, such as coordinate transformation from alt-az on local site to sky\ncoordinates.\n\nTodo\n----\n- [ ] Convert from print to logger (grand-mother/tools#1) ", {"attributes": {}, "methods": {"__init__": [36, "", {"parameters": {"longitude": null, "latitude": null, "altitude": null, "ra": null, "dec": null}, "prototype": "cls, longitude=None, latitude=None, altitude=None, ra=None, dec=None"}], "to_skycoord": [51, "Transforms an input direction given in a local site from alt-az system (theta, phi) to\n`~astropy.coordinates.SkyCoord` sky coordinates.\n\nGRAND convention: receiver convention: phi is oriented West of North, theta from zenith\n\n```\n      z=Up\n      /\\\n      |\n      |\n      | theta\n      |- /.\n      | / .\n      |/  .\n      --------------> y=West\n     / .  .\n    / / . .\n   /-     .\n  /   phi\n |/\nx=North\n```\n", {"parameters": {"theta": ["array, scalar, Quantity, Angle", "Local azimuth of the event"], "phi": ["array, scalar, Quantity, Angle", "Local altitude of the event"], "time": ["sequence, ndarray, number, str, bytes, or Time object", "Time to use to compute the AltAz coordinates, instance of `~astropy.time.Time`"], "coordsys": ["class or frame object or SkyCoord object", "Coordinate system to use, can be an instance of `~astropy.coordinates` such as ICRS,"]}, "prototype": "cls, theta=None, phi=None, time=None, coordsys=ICRS", "returns": [["ICRS", "Sky coordinates in 'ICRS'", ""]]}], "localsiderealtime": [101, "Provide the local sidereal time\n", {"parameters": {"time": ["sequence, ndarray, number, str, bytes, or Time object", "Input time, in whatever time scale supported by `~astropy.time.Time`"]}, "prototype": "cls, time", "returns": [["Longitude", "Local sidereal time", ""]]}]}, "bases": []}]}, "definitions": {}, "functions": {}, "imports": {}, "path": "tools/astro.py"}, "coordinates": {"doc": "GRAND extension of astropy.coordinates", "classes": {"ENU": [37, "", {"attributes": {"default_representation": [38, "", null], "location": [40, "The origin of the local frame", null], "orientation": [43, "The orientation of the local frame", null], "equinox": [46, "", null], "obstime": [47, "", null]}, "methods": {"__init__": [50, "", {"parameters": {"*args": null, "**kwargs": null}, "prototype": "self, *args, **kwargs"}]}, "bases": ["BaseCoordinateFrame"]}, "tools/coordinates/frame.py"], "GeodeticRepresentation": [32, "Geodetic coordinates representation assuming WGS84 ellipsoid", {"attributes": {"attr_classes": [35, "", null]}, "methods": {"from_cartesian": [40, "", {"parameters": {"cart": null}, "prototype": "cls, cart"}], "to_cartesian": [53, "", {"parameters": {}, "prototype": "self"}]}, "bases": ["BaseRepresentation"]}, "tools/coordinates/representation.py"]}, "definitions": {}, "functions": {}, "imports": {"1": {"frame": [["ENU", "ENU"]], "representation": [["GeodeticRepresentation", "GeodeticRepresentation"]]}}, "path": "tools/coordinates/__init__.py", "__all__": ["ENU", "GeodeticRepresentation"], "modules": {"representation": {"doc": "GRAND extension of astropy.coordinates", "classes": {"GeodeticRepresentation": [32, "Geodetic coordinates representation assuming WGS84 ellipsoid", {"attributes": {"attr_classes": [35, "", null]}, "methods": {"from_cartesian": [40, "", {"parameters": {"cart": null}, "prototype": "cls, cart"}], "to_cartesian": [53, "", {"parameters": {}, "prototype": "self"}]}, "bases": ["BaseRepresentation"]}]}, "definitions": {}, "functions": {}, "imports": {}, "path": "tools/coordinates/representation.py", "__all__": ["GeodeticRepresentation"]}, "frame": {"doc": "GRAND extension of astropy.coordinates", "classes": {"ENU": [37, "", {"attributes": {"default_representation": [38, "", null], "location": [40, "The origin of the local frame", null], "orientation": [43, "The orientation of the local frame", null], "equinox": [46, "", null], "obstime": [47, "", null]}, "methods": {"__init__": [50, "", {"parameters": {"*args": null, "**kwargs": null}, "prototype": "self, *args, **kwargs"}]}, "bases": ["BaseCoordinateFrame"]}]}, "definitions": {}, "functions": {"itrs_to_enu": [81, "Compute the transformation from ITRS to ENU coordinates", {"parameters": {"itrs": null, "enu": null}, "prototype": "itrs, enu"}], "enu_to_itrs": [94, "Compute the transformation from ENU to ITRS coordinates", {"parameters": {"enu": null, "itrs": null}, "prototype": "enu, itrs"}]}, "imports": {}, "path": "tools/coordinates/frame.py", "__all__": ["ENU"]}}}}}}